# Cloud Build configuration
steps:
  - name: 'Run tests'
    entrypoint: bash
    args:
      - '-c'
      - |
        pip install -r requirements.txt
        pip install pytest
        python -m pytest tests/ -v || true  # Don't fail the build if tests fail for now
  
  - name: 'Build the container image'
    args: ['build', '-t', '${_REGION}-docker.pkg.dev/$PROJECT_ID/document-api/document-api:$SHORT_SHA', '-t', '${_REGION}-docker.pkg.dev/$PROJECT_ID/document-api/document-api:latest', '.']
  
  - name: 'Push the container image to Artifact Registry with multiple tags'
    args: ['push', '--all-tags', '${_REGION}-docker.pkg.dev/$PROJECT_ID/document-api/document-api']
  
  - name: 'Deploy to Cloud Run'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'document-management-api'
      - '--image'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/document-api/document-api:$SHORT_SHA'
      - '--platform'
      - 'managed'
      - '--region'
      - '${_REGION}'
      - '--service-account'
      - '${_SERVICE_ACCOUNT}'
      - '--allow-unauthenticated'

  # 
  - name: 'Create Cloud Function source archive'
    entrypoint: bash
    args:
      - '-c'
      - |
        mkdir -p /workspace/function
        cp -r src /workspace/function/
        cp requirements.txt /workspace/function/
        cd /workspace/function
        zip -r /workspace/function-source.zip .

  - name: 'Upload function source to Storage'
    entrypoint: gsutil
    args:
      - 'cp'
      - '/workspace/function-source.zip'
      - 'gs://${_PROJECT_ID}-functions/function-source.zip'

substitutions:
  _REGION: 'eu-west1'  # Matching the GitHub connection region
  _PROJECT_ID: '${PROJECT_ID}'
# _SERVICE_ACCOUNT: 'cloudbuild-sa@${PROJECT_ID}.iam.gserviceaccount.com'

images:
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/document-api/document-api:$SHORT_SHA'
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/document-api/document-api:latest'
options:
  logging: CLOUD_LOGGING_ONLY